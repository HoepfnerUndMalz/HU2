
package se1.hu2.a3;
import sun.jvm.hotspot.utilities.Observable;
import sun.jvm.hotspot.utilities.Observer;

import java.util.ArrayList;
import java.util.List;

public class GefaehrlicherAbend {

    public static void main(String[] args) {

        Villa riesenVilla = new Villa();
        System.out.println("Villa unbewacht");

        riesenVilla.zombieGreiftAn();

        new Wachhund();

        riesenVilla.zombieGreiftAn();

        new Alarmanlage();
        new Wachmann();
        riesenVilla.zombieGreiftAn();

    }
}

public class Villa {
    private List<Observer> observers = new ArrayList<Observer>();
    public void addObserver(Observer observer) {
        this.observers.add(observer);
    }

    public void removeObserver(Observer observer) {
        this.observers.remove(observer);
    }
    public void notifyObservers() {
        for (Observer observer : this.observers) {
            observer.update();
        }
    }
}

public class Safety implements Observer {

    @Override
    public void update(Observable observable, Object o) {

    }

    // standard getter and setter
}

public interface Observer {
    public void update(Observable observable, Object o);
}



interface Observer {
}

interface Subject {
    public void registerObserver (Observer observer);
    public void removeObserver (Observer observer);
    public void notifyObservers ();
}

class Villa implements Subject {

    @Override
    public void registerObserver(Observer observer) {

    }

    @Override
    public void removeObserver(Observer observer) {

    }

    @Override
    public void notifyObservers() {

    }

    public void zombieGreiftAn() {
        notifyObservers();
    }
}

class Wachhund implements Observer {

    public Wachhund() {
        System.out.println("Wachhund");
    }
}

class Alarmanlage implements Observer {

    public Alarmanlage() {
        System.out.println("Alarmanlage");
    }
}

class Wachmann implements Observer {

    public Wachmann() {
        System.out.println("Wachmann");
    }
}/*

